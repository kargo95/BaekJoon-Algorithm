#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>
using namespace std;
vector<int> v;
int N,input;
int cntArr[8001];
int minIdx,mins= -1;
int main() {
	cin.tie(NULL);
	ios::sync_with_stdio(false);
	cin >> N;
	int sum = 0;
	for (int i = 0; i < N; i++) {
		cin >> input;
		v.push_back(input);
		sum += input;
		cntArr[input + 4000]++;
	}
	bool isSecond;
	for (int i = 1; i <= 8000; i++) {
		if (cntArr[i] != 0 && cntArr[i] == mins && isSecond == false) {
			mins = cntArr[i];
			minIdx = i;
			isSecond = true;
		}
		if (cntArr[i] != 0 && cntArr[i] > mins)
		{
			mins = cntArr[i];
			minIdx = i;	
			isSecond = false;
		}
		
	}
	
	sort(v.begin(), v.end());
	cout << round((double)sum / N) << "\n";
	cout << v[N / 2] << "\n";
	cout << minIdx - 4000 << "\n";
	cout << abs(v[0] - v[v.size()-1]) << "\n";
	
}

